throttle(['Lock']) {
    node {
        def remote = [:]
        
        withCredentials([file(credentialsId: 'vm8', variable: 'v8key')]) {
            remote.identityFile = v8key
            remote.name = 'front'
            remote.host = '20.124.183.101'
            remote.user = 'azureuser'
            remote.allowAnyHosts = true
            
            stage ('Cleanup') {
                writeFile file: 'cleanup.sh', text:
                "sudo rm -rf dockerfile\ndocker stop dockerfile_backend1_1 || true && docker rm dockerfile_backend1_1 || true\ndocker stop dockerfile_backend2_1 || true && docker rm dockerfile_backend2_1 || true"
                sshScript remote: remote, script: "cleanup.sh"
            }
            
            stage ('Scm Checkout') {
                git branch: 'back', url: 'https://github.com/Nazar802/dockerfile.git'
                sshCommand remote: remote, command: 'git clone --branch back https://github.com/Nazar802/dockerfile.git'
            }
            
            stage ('Docker-Compose up') {
                writeFile file: 'start.sh', text:
                "cd dockerfile\nMY_PASSWORD=${MY_PASSWORD} DATASOURCE_USER=${DATASOURCE_USER} DATASOURCE_PASSWORD=${DATASOURCE_PASSWORD} DATASOURCE_DBNAME=${DATASOURCE_DBNAME} DATASOURCE_URL=${DATASOURCE_URL} JWT_SECRET=${JWT_SECRET} docker-compose up -d --scale backend=2"
                sshScript remote: remote, script: "start.sh"
            }
        }
    }
}
