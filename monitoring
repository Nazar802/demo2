throttle(['Lock']) {
    node {
        def remote = [:]
        
        withCredentials([file(credentialsId: 'keyssh', variable: 'vm16')]){
            remote.identityFile = vm16
            remote.name = 'monitoring'
            remote.host = '20.120.10.138'
            remote.user = 'azureuser'
            remote.allowAnyHosts = true
            
            stage ('Cleanup 16') {
                writeFile file: 'cleanup.sh', text:
                "sudo rm -rf dockerfile\ndocker stop node_exporter || true && docker rm node_exporter || true\ndocker stop cadvisor || true && docker rm cadvisor || true\ndocker stop grafana || true && docker rm grafana || true\ndocker stop prometheus || true && docker rm prometheus || true"
                sshScript remote: remote, script: "cleanup.sh"
            }
            
            stage ('Scm Checkout 16') {
                git branch: 'monitoring', url: 'https://github.com/Nazar802/dockerfile.git'
                sshCommand remote: remote, command: 'git clone --branch monitoring https://github.com/Nazar802/dockerfile.git'
            }
            
            stage ('Docker-Compose Up 16') {
                writeFile file: 'start.sh', text: 
                "cd dockerfile\ndocker-compose up -d"
                sshScript remote: remote, script: "start.sh"
            }
        }
        
        withCredentials([file(credentialsId: 'vm8', variable: 'v8key')]) {
            remote.identityFile = v8key
            remote.name = 'front'
            remote.host = '20.124.183.101'
            remote.user = 'azureuser'
            remote.allowAnyHosts = true
            
            stage ('Cleanup 8') {
                writeFile file: 'cleanup.sh', text:
                "sudo rm -rf dockerfile\ndocker stop node_exporter || true && docker rm node_exporter || true\ndocker stop cadvisor || true && docker rm cadvisor || true"
                sshScript remote: remote, script: "cleanup.sh"
            }
            
            stage ('Git Clone 8') {
                sshCommand remote: remote, command: 'git clone --branch monitoring https://github.com/Nazar802/dockerfile.git'
            }
            
            stage ('Docker-Compose up 8') {
                writeFile file: 'start.sh', text:
                "cd dockerfile/monitoring8\ndocker-compose up -d"
                sshScript remote: remote, script: "start.sh"
            }
        }
        
    }
}
